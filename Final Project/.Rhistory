bg.color = "skyblue",
saturation = .85
) +
tm_compass(
north = 0,
type = "arrow",
position = "left"
)
tm_shape(
cali_fill,
proj4string = CRS(
"+proj=utm +zone=11"
),
ylim = c(
min_lat,
max_lat
),
xlim = c(
min_lon,
max_lon
)
) +
tm_fill(
col = "lightgreen"
) +
tm_borders(
lwd = 1,
col = "black"
) +
tm_shape(
cali_county_fill
) +
tm_borders(
lwd = .5,
col = "grey"
) +
tm_shape(
poke_points
) +
tm_symbols(
col = "pres",
palette = "-Spectral",
border.lwd = 0.1,
border.col = NA,
style = "jenks",
alpha = 0.9,
scale = .45,
title.col = "Class"
) +
tm_legend(
position = c(
"left",
"bottom"
),
legend.outside = TRUE,
frame = F,
main.title = "Class Spawn Frequency in Pokemon Go"
) +
tm_layout(
bg.color = "skyblue",
saturation = .85
) +
tm_compass(
north = 0,
type = "arrow",
position = "left"
)
tm_shape(
cali_fill,
proj4string = CRS(
"+proj=utm +zone=11"
),
ylim = c(
min_lat,
max_lat
),
xlim = c(
min_lon,
max_lon
)
) +
tm_fill(
col = "lightgreen"
) +
tm_borders(
lwd = 1,
col = "black"
) +
tm_shape(
cali_county_fill
) +
tm_borders(
lwd = .5,
col = "grey"
) +
tm_shape(
poke_points
) +
tm_symbols(
col = "pres",
palette = "-Spectral",
border.lwd = 0.1,
border.col = NA,
style = "jenks",
n = 10,
alpha = 0.9,
scale = .45,
title.col = "Class"
) +
tm_legend(
position = c(
"left",
"bottom"
),
legend.outside = TRUE,
frame = F,
main.title = "Class Spawn Frequency in Pokemon Go"
) +
tm_layout(
bg.color = "skyblue",
saturation = .85
) +
tm_compass(
north = 0,
type = "arrow",
position = "left"
)
summary(df$pres)
tm_shape(
cali_fill,
proj4string = CRS(
"+proj=utm +zone=11"
),
ylim = c(
min_lat,
max_lat
),
xlim = c(
min_lon,
max_lon
)
) +
tm_fill(
col = "lightgreen"
) +
tm_borders(
lwd = 1,
col = "black"
) +
tm_shape(
cali_county_fill
) +
tm_borders(
lwd = .5,
col = "grey"
) +
tm_shape(
poke_points
) +
tm_symbols(
col = "pres",
palette = "-Spectral",
border.lwd = 0.1,
border.col = NA,
alpha = 0.9,
scale = .45,
title.col = "Class"
) +
tm_legend(
position = c(
"left",
"bottom"
),
legend.outside = TRUE,
frame = F,
main.title = "Class Spawn Frequency in Pokemon Go"
) +
tm_layout(
bg.color = "skyblue",
saturation = .85
) +
tm_compass(
north = 0,
type = "arrow",
position = "left"
)
tm_shape(
cali_fill,
proj4string = CRS(
"+proj=utm +zone=11"
),
ylim = c(
min_lat,
max_lat
),
xlim = c(
min_lon,
max_lon
)
) +
tm_fill(
col = "lightgreen"
) +
tm_borders(
lwd = 1,
col = "black"
) +
tm_shape(
cali_county_fill
) +
tm_borders(
lwd = .5,
col = "grey"
) +
tm_shape(
poke_points
) +
tm_symbols(
col = "pres",
palette = "-Spectral",
border.lwd = 0.1,
border.col = NA,
alpha = 0.9,
scale = .45,
title.col = "Time til Despawn"
) +
tm_legend(
position = c(
"left",
"bottom"
),
legend.outside = TRUE,
frame = F,
main.title = "Class Spawn Frequency in Pokemon Go"
) +
tm_layout(
bg.color = "skyblue",
saturation = .85
) +
tm_compass(
north = 0,
type = "arrow",
position = "left"
)
View(rare_df)
df_test <- df %>%
mutate(
encounter_ms = ifelse(
test = encounter_ms = -1,
yes = abs(encounter_ms*mean(encounter_ms)),
no = NA
),
pres = (((encounter_ms - disppear_ms)/1000)/60),
pres = abs(pres),
)
df_test <- df %>%
mutate(
encounter_ms = ifelse(
test = encounter_ms = -1,
yes = abs(encounter_ms*mean(encounter_ms)),
no = NA
),
pres = (((encounter_ms - disppear_ms)/1000)/60),
pres = abs(pres)
)
df_test <- df %>%
mutate(
encounter_ms = ifelse(
test = encounter_ms = -1,
yes = abs(encounter_ms*mean(encounter_ms)),
no = NA
),
pres = (((encounter_ms - disppear_ms)/1000)/60),
pres = abs(pres)
)
df_test <- df_rare %>%
mutate(
encounter_ms = ifelse(
test = encounter_ms = -1,
yes = abs(encounter_ms*mean(encounter_ms)),
no = NA
),
pres = (((encounter_ms - disppear_ms)/1000)/60),
pres = abs(pres)
)
df_test <- df_rare %>%
mutate(
encounter_ms = ifelse(
test = encounter_ms = -1,
yes = abs(encounter_ms*mean(encounter_ms)),
no = NA
),
pres = (((encounter_ms - disppear_ms)/1000)/60),
pres = abs(pres)
)
df_test <- df_rare %>%
mutate(
encounter_ms = ifelse(
test = encounter_ms = -1,
yes = abs(encounter_ms*mean(encounter_ms)),
no = NA
)
df_test <- df_rare %>%
mutate(
encounter_ms = ifelse(
test = encounter_ms == -1,
yes = abs(encounter_ms*mean(encounter_ms)),
no = NA
),
pres = (((encounter_ms - disppear_ms)/1000)/60),
pres = abs(pres)
)
df_test <- rare_df %>%
mutate(
encounter_ms = ifelse(
test = encounter_ms == -1,
yes = abs(encounter_ms*mean(encounter_ms)),
no = NA
),
pres = (((encounter_ms - disppear_ms)/1000)/60),
pres = abs(pres)
)
View(rare_df)
View(df_test)
df_test <- rare_df %>%
mutate(
encounter_ms = ifelse(
test = encounter_ms == -1,
yes = abs(encounter_ms*mean(encounter_ms)),
no = NULL
),
pres = (((encounter_ms - disppear_ms)/1000)/60),
pres = abs(pres)
)
df_test <- rare_df %>%
mutate(
encounter_ms = ifelse(
test = encounter_ms == -1,
yes = abs(encounter_ms*mean(encounter_ms))
),
pres = (((encounter_ms - disppear_ms)/1000)/60),
pres = abs(pres)
)
?ifelse()
df_test <- rare_df %>%
mutate(
encounter_ms = ifelse(
test = encounter_ms == -1,
yes = abs(encounter_ms*mean(encounter_ms)),
no = NA
),
pres = (((encounter_ms - disppear_ms)/1000)/60),
pres = abs(pres)
)
df_test <- rare_df %>%
mutate(
encounter_ms = ifelse(
test = encounter_ms == -1,
yes = abs(encounter_ms*mean(encounter_ms)),
no = encounter_ms
),
pres = (((encounter_ms - disppear_ms)/1000)/60),
pres = abs(pres)
)
rare_df <- rare_df %>%
mutate(
encounter_ms = ifelse(
test = encounter_ms == -1,
yes = abs(encounter_ms*mean(encounter_ms)),
no = encounter_ms
),
pres = (((encounter_ms - disppear_ms)/1000)/60),
pres = abs(pres)
)
rare_df <- rare_df %>%
mutate(
encounter_ms = ifelse(
test = encounter_ms == -1,
yes = abs(encounter_ms*mean(encounter_ms)),
no = encounter_ms
),
pres = (((encounter_ms - disppear_ms)/1000)/60),
pres = abs(pres),
lng = -1*(abs(lng))
)
summary(df$lat)
summary(df$lng)
summary(df$pres)
plot(df$pres)
poke_points <- st_as_sf(
rare_df,
coords = c("lng", "lat"),
crs = CRS("+proj=utm +zone=11")
)
tm_shape(
cali_fill,
proj4string = CRS(
"+proj=utm +zone=11"
),
ylim = c(
min_lat,
max_lat
),
xlim = c(
min_lon,
max_lon
)
) +
tm_fill(
col = "lightgreen"
) +
tm_borders(
lwd = 1,
col = "black"
) +
tm_shape(
cali_county_fill
) +
tm_borders(
lwd = .5,
col = "grey"
) +
tm_shape(
poke_points
) +
tm_symbols(
col = "class",
palette = "-Spectral",
border.lwd = 0.1,
border.col = NA,
alpha = 0.9,
scale = .45,
title.col = "Class"
) +
tm_legend(
position = c(
"left",
"bottom"
),
legend.outside = TRUE,
frame = F,
main.title = "Class Spawn Frequency in Pokemon Go"
) +
tm_layout(
bg.color = "skyblue",
saturation = .85
) +
tm_compass(
north = 0,
type = "arrow",
position = "left"
)
tm_shape(
cali_fill,
proj4string = CRS(
"+proj=utm +zone=11"
),
ylim = c(
min_lat,
max_lat
),
xlim = c(
min_lon,
max_lon
)
) +
tm_fill(
col = "lightgreen"
) +
tm_borders(
lwd = 1,
col = "black"
) +
tm_shape(
cali_county_fill
) +
tm_borders(
lwd = .5,
col = "grey"
) +
tm_shape(
poke_points
) +
tm_symbols(
col = "pres",
palette = "-Spectral",
border.lwd = 0.1,
border.col = NA,
alpha = 0.9,
scale = .45,
title.col = "Time til Despawn"
) +
tm_legend(
position = c(
"left",
"bottom"
),
legend.outside = TRUE,
frame = F,
main.title = "Class Spawn Frequency in Pokemon Go"
) +
tm_layout(
bg.color = "skyblue",
saturation = .85
) +
tm_compass(
north = 0,
type = "arrow",
position = "left"
)
save.image("~/Fall 2019/Spatial Stats/Final Project/data.RData")
install.packages("spData")
